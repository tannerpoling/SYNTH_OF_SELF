- DONE stop trying to use touchDesigner's tcp/ip dat, it sucks
	- write own client in python, takes in 2d array of synth freq and mod, parses
		- use pickle.dumps and pickle.loads for encode and decode
	- populate DAT table with values

- DONE implement my own basic tcp/ip server and client
notes: 
connected using ipv4 address of server, had to disable firewall on private networks in windows
for windows, use command ipconfig to get ip. for linux just go to wifi settings to get ip.

- DONE (?) define callback method in new server/client thing
	- whenever server (touchdesigner) recieves ping, update DAT table

- DONE get tdServer fully working
	- DONE basic comms
	- DONE implement synchronization to avoid threading issues
		- need to synchronize data input! TouchDesigner runs everything in threads, can't have undefined state
		- execute DAT has a frameStart(frame) function! this is how you synchronize server input
		- synth of self -> touchdesigner server
			- data recieved by server DAT
			- server DAT puts data into Queue
			- dataCheck DAT gets info from server DAT's Queue every frame (in frameStart function)


- use DAT table to control things in touchdesigner
	- DONE convert data in to CHOPs that can control stuff
	- easy start: center coordinates of a small circle
	- try some geometry stuff with it
	- python client -> server in td -> parameters of visuals

code to format table:
n = op('tableDATname')
n.setSize(3, 6)
try:
	n.replaceRow(0)
	n.replaceRow(1)
	n.replaceRow(2)
except:
	print('idk')
n.replaceRow(0, [None, 'synth0', 'synth1', 'synth2', 'synth3', 'synth4'])
n.replaceCol(0, [None, 'freq', 'mod'])
